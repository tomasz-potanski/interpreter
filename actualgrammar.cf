comment "//" ;
comment "/*" "*/" ;
comment "{" "}" ;
comment "{*" "*}" ;
  
entrypoints Program ;

--Programm.	Program	::=	ProgramNameHeader Block "." ;
Programm.	Program	::=	Exp ;

ProgNameHeaderNotBlank.	ProgramNameHeader 	::= "program" Ident ";" ;
ProgNameHeaderBlank.	ProgramNameHeader 	::=  ;


Blockk.		Block	::= ConstantDeclaration VariableDeclaration "begin" [Stmt] "end" ;

terminator Stmt "" ;

-------------(Variables Declaration)---------------
VBExists.		VariableDeclaration ::=	"var" [VarDeclarationLine] ;
VBDoesntExists.		VariableDeclaration ::=	;
DLList.			VarDeclarationLine    ::= [Ident] ":" Type ";" ;

separator nonempty VarDeclarationLine "" ;
separator nonempty Ident "," ;

--------------(Constant Declaration)-------------
ConstDeclBlank.		ConstantDeclaration	::=	;
ConstDeclNotBlank.	ConstantDeclaration	::=	"const" [ConstDeclLine];

ConsDeclLine.		ConstDeclLine	::=	Ident "=" LiteralValue ";" ;
--LiteralValStr.	LiteralValue	::=	String ;
--LiteralValDouble.	LiteralValue	::=	Double ;
--LiteralValChar.	LiteralValue	::=	Char ;
LiteralValInt.		LiteralValue	::=	Integer ;

separator nonempty ConstDeclLine "" ;

------------(statements)-------


Stmtt.		Stmt 	::=	Exp ;

-------------(expressions)--------
EAdd. 	Exp 	::= 	Exp 	"+" 	Exp1 	;
ESub. 	Exp 	::= 	Exp 	"-" 	Exp1 	;
EMul. 	Exp1 	::= 	Exp1 	"*" 	Exp2 	;
EDiv. 	Exp1 	::= 	Exp1 	"/" 	Exp2 	;
EInt. 	Exp2 	::= 	Integer 	;
coercions 	Exp 	2 	;
--EAss.		Exp 	::=	Ident "=" Exp ;

---------(types)-----------

TInt.	Type	::=	"Integer" ;
TBool.	Type 	::=	"Boolean" ;
